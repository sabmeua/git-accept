#!/bin/sh

usage() {
  cat <<USAGE
usage: git accept <plan> [Filename]

Available plans are:
   theirs-then-ours  Accept both current and incoming changes in the order of "theirs", "ours".
   ours-then-theirs  Accept both current and incoming changes in the order of "ours", "theirs".
   theirs            Accept current changes. alias of "git checkout --ours".
   ours              Accept incoming changes. alias of "git checkout --theirs".

USAGE
}

if [ $# -lt 2 ]; then
  usage
  exit 1
fi

PLAN="$1"; shift
FILE="$1"

if [ -z "$(git grep -E '^<{7}')" ]; then
  echo "No unresolved conflicts in this file."
  echo
  exit 1
fi

if [ "${PLAN}" = "theirs" ] || [ "${PLAN}" = "ours" ]; then
  git checkout --${PLAN} ${FILE}
elif [ "${PLAN}" = "theirs-then-ours" ]; then
  cat ${FILE} | awk '
    /^>{7}.*$/ && found1 && found2{
      print val2 ORS val1
      found1=found2=""
      next
    }
    /^<{7}.*$/{
      val1=val2=found2=""
      found1=1
      next
    }
    found1 && /^={7}.*$/{
      found2=1
      next
    }
    found1 && !found2{
      val1=(val1?val1 ORS:"")$0
      next
    }
    found2{
      val2=(val2?val2 ORS:"")$0
      next
    }
    1' | tee ${FILE} >/dev/null 2>&1
elif [ "${PLAN}" = "ours-then-theirs" ]; then
  sed -i -E '/^[<>=]{7}.*$/d' ${FILE}
fi
