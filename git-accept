#!/bin/sh

usage() {
  cat <<USAGE
usage: git accept <plan> [Filename]

Available plans are:
   theirs-then-ours  Accept both current and incoming changes in the order of "theirs", "ours".
   ours-then-theirs  Accept both current and incoming changes in the order of "ours", "theirs".
   theirs            Accept current changes. alias of "git checkout --ours".
   ours              Accept incoming changes. alias of "git checkout --theirs".

USAGE
}

if [ $# -lt 2 ]; then
  usage
  exit 1
fi

PLAN="$1"; shift
FILE="$1"

if [ -z "$(git grep -E '^<{7}')" ]; then
  echo "No unresolved conflicts in this file."
  echo
  exit 1
fi

if [ "${PLAN}" = "theirs" ] || [ "${PLAN}" = "ours" ]; then
  git checkout --${PLAN} ${FILE}
elif [ "${PLAN}" = "theirs-then-ours" ]; then
  CONFLICT_START=$(awk '/^<{7} .*$/{ print NR }' ${FILE} | head -n1)
  PART_POINT=$(awk '/^={7}$/{ print NR }' ${FILE} | head -n1)
  CONFLICT_END=$(awk '/^>{7} .*$/{ print NR }' ${FILE} | head -n1)
  OURS_START=$(expr ${CONFLICT_START} + 1)
  OURS_END=$(expr ${PART_POINT} - 1)
  THEIRS_START=$(expr ${PART_POINT} + 1)
  THEIRS_END=$(expr ${CONFLICT_END} - 1)
  INSERT_POINT=${CONFLICT_START}
  cat <<ERR
Sorry, this function is under implementation.
ERR
  exit 1
elif [ "${PLAN}" = "ours-then-theirs" ]; then
  sed -i -E '/^[<>=]{7}.*$/d' ${FILE}
fi
